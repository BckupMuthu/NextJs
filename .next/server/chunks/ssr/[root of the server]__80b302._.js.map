{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/mpattan/Documents/saree/saree-sell-app/pages/Spinner.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactSpinningWheel from \"react-spinning-wheel\";\nimport \"react-spinning-wheel/dist/style.css\";\n\nconst Spinner = ({ onGameFinish }) => {\n  const [isClient, setIsClient] = useState(false);\n  const [spinning, setSpinning] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  const segments = [\n    { option: \"Prize 1\", id: \"prize1\" },\n    { option: \"Prize 2\", id: \"prize2\" },\n    { option: \"Prize 3\", id: \"prize3\" },\n    { option: \"Prize 4\", id: \"prize4\" },\n    { option: \"Prize 5\", id: \"prize5\" },\n  ];\n\n  const handleSpinClick = () => {\n    setSpinning(true);\n    setTimeout(() => {\n      setSpinning(false);\n      const wonAmount = Math.random() * 100; // Random prize amount\n      onGameFinish(wonAmount); // Callback to handle game finish\n    }, 3000); // Simulate spin duration\n  };\n\n  if (!isClient) return null;  // Only render on the client\n\n  return (\n    <div>\n      <ReactSpinningWheel\n        segments={segments}\n        spin={spinning}\n        onComplete={() => console.log(\"Spin complete!\")}\n      />\n      <button\n        onClick={handleSpinClick}\n        className=\"mt-6 p-2 bg-blue-500 text-white rounded-lg\"\n      >\n        Spin\n      </button>\n    </div>\n  );\n};\n\nexport default Spinner;\n\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;AAGA,MAAM,UAAU,CAAC,EAAE,YAAY,EAAE;IAC/B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY;IACd,GAAG,EAAE;IAEL,MAAM,WAAW;QACf;YAAE,QAAQ;YAAW,IAAI;QAAS;QAClC;YAAE,QAAQ;YAAW,IAAI;QAAS;QAClC;YAAE,QAAQ;YAAW,IAAI;QAAS;QAClC;YAAE,QAAQ;YAAW,IAAI;QAAS;QAClC;YAAE,QAAQ;YAAW,IAAI;QAAS;KACnC;IAED,MAAM,kBAAkB;QACtB,YAAY;QACZ,WAAW;YACT,YAAY;YACZ,MAAM,YAAY,KAAK,MAAM,KAAK,KAAK,sBAAsB;YAC7D,aAAa,YAAY,iCAAiC;QAC5D,GAAG,OAAO,yBAAyB;IACrC;IAEA,IAAI,CAAC,UAAU,OAAO,MAAO,4BAA4B;IAEzD,qBACE,qKAAC;;0BACC,qKAAC,6IAAA,CAAA,UAAkB;gBACjB,UAAU;gBACV,MAAM;gBACN,YAAY,IAAM,QAAQ,GAAG,CAAC;;;;;;0BAEhC,qKAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;;;;;;;AAKP;uCAEe"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}